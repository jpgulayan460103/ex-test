{"version":3,"sources":["logo.png","SearchApp.jsx","LoginForm.jsx","RegistrationForm.jsx","Login.jsx","Layout.jsx","App.jsx","serviceWorker.js","index.js"],"names":["module","exports","Title","Typography","Text","Option","Select","SearchApp","useEffect","getBeneficiaries","getSourceStatistics","getBarangays","baseUrl","useState","beneficiaries","setBeneficiaries","searchOptions","setSearchOptions","loading","setLoading","sourceStatistics","setSourceStatistics","statistics","setStatistics","statisticsTotal","setStatisticsTotal","barangays","setBarangays","keywords","setKeywords","axios","get","params","then","response","APIResponse","data","map","item","key","id","catch","error","console","log","sourceResponse","index","title","source","source_count","getCategoryStatistics","category","category_count","children","filter","length","total","reduce","accumulator","currentValue","parseInt","dataSource","columns","render","text","record","highlightStyle","backgroundColor","padding","searchWords","autoEscape","textToHighlight","lastname","firstname","midname","ext","dataIndex","name","className","layout","onFinish","Item","autoComplete","placeholder","allowClear","onChange","e","searchString","target","value","keyword","split","trim","queryString","style","width","mode","barangay","optionLabelProp","push","barangay_name","label","city_name","populateBarangaySelection","populateSourceSelection","type","htmlType","strong","pagination","position","expandable","expandedRowRender","margin","remarks","full_name_fn","address","province_name","payment_category","payout_branch","payout_partner","cash_out_ref_number","schedule","batch_part","starpay_status","level","showLine","switcherIcon","DownOutlined","defaultExpandAll","onSelect","selectedKeys","info","treeData","labelCol","span","wrapperCol","tailLayout","offset","LoginForm","props","submit","setSubmit","formError","initialValues","remember","values","onFinishFailed","errorInfo","validateStatus","help","message","displayErrors","rules","required","prefix","UserOutlined","Password","LockOutlined","disabled","RegistrationForm","formRef","React","useRef","setUserPosition","setCities","setProvince","setCity","setBarangay","formType","setFormType","userId","setUserId","changePassword","setChangePassword","getProvinces","userData","_cloneDeep","barangay_id","city_psgc","province_psgc","city","province","current","setFieldsValue","field","ref","valuePropName","checked","Fragment","Layout","textAlign","src","logo","alt","App","to","path","Login","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.82f3fd19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.86d1eb32.png\";","import React, { useState, useEffect } from 'react';\r\n\r\n\r\nimport { Button, Table, Typography, Input, Form, Select, Space, Tree   } from 'antd';\r\nimport axios from 'axios';\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nimport { DownOutlined } from '@ant-design/icons';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Option } = Select;\r\n\r\nconst SearchApp = () => {\r\n  useEffect(() => {\r\n    getBeneficiaries();\r\n    getSourceStatistics();\r\n    getBarangays();\r\n  }, []);\r\n  const baseUrl = \"http://localhost:3000\";\r\n  const [beneficiaries, setBeneficiaries] = useState([]);\r\n  const [searchOptions, setSearchOptions] = useState({});\r\n  const [loading, setLoading] = useState(false);\r\n  const [categoryStatistics, setCategoryStatistics] = useState([]);\r\n  const [sourceStatistics, setSourceStatistics] = useState([]);\r\n  const [statistics, setStatistics] = useState([]);\r\n  const [statisticsTotal, setStatisticsTotal] = useState(0);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [keywords, setKeywords] = useState([]);\r\n\r\n  const queryString = (e) => {\r\n    let searchString = e.target.value;\r\n    setSearchOptions({\r\n      ...searchOptions,\r\n      keyword: searchString,\r\n    });\r\n    setKeywords(searchString.split(\",\").map(item => item.trim()));\r\n  }\r\n\r\n  const selectBarangay = (e) => {\r\n    let searchString = e;\r\n    setSearchOptions({\r\n      ...searchOptions,\r\n      barangay: searchString,\r\n    });\r\n  }\r\n\r\n  const selectSource = (e) => {\r\n    let searchString = e;\r\n    setSearchOptions({\r\n      ...searchOptions,\r\n      source: searchString,\r\n    });\r\n  }\r\n\r\n  const onSelect = (selectedKeys, info) => {\r\n    console.log('selected', selectedKeys, info);\r\n  }\r\n\r\n  const getBeneficiaries = () => {\r\n    setLoading(true);\r\n    axios.get(`${baseUrl}/beneficiaries`,{params: searchOptions})\r\n      .then(function (response) {\r\n        setLoading(false);\r\n        let APIResponse = response.data.data;\r\n        APIResponse.map(item => {\r\n          item.key = item.id;\r\n          return item;\r\n        })\r\n        setBeneficiaries(APIResponse);\r\n      })\r\n      .catch(function (error) {\r\n        setLoading(false);\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  const getSourceStatistics = () => {\r\n    axios.get(`${baseUrl}/beneficiaries/statistics/source`,{params: searchOptions})\r\n      .then(function (response) {\r\n        setLoading(false);\r\n        let sourceResponse = response.data.data;\r\n        sourceResponse.map((item, index) => {\r\n          item.key = `source_statistic_${index}`;\r\n          item.title = `${item.source}: ${item.source_count}`;\r\n          return item;\r\n        })\r\n        setSourceStatistics(sourceResponse);\r\n        getCategoryStatistics(sourceResponse);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n      });\r\n  }\r\n\r\n  const getCategoryStatistics = (sourceResponse) => {\r\n    axios.get(`${baseUrl}/beneficiaries/statistics/category`,{params: searchOptions})\r\n      .then(function (response) {\r\n        setLoading(false);\r\n        let APIResponse = response.data.data;\r\n        APIResponse.map((item, index) => {\r\n          item.key = `category_statistic_${index}`;\r\n          item.title = `${item.category}: ${item.category_count}`;\r\n          return item;\r\n        })\r\n        for (let index = 0; index < sourceResponse.length; index++) {\r\n          sourceResponse[index].children = APIResponse.filter(item => item.source == sourceResponse[index].source)\r\n        }\r\n        let total = sourceResponse.reduce((accumulator, currentValue) => {\r\n          return accumulator + parseInt(currentValue.source_count);\r\n        }, 0);\r\n        setStatisticsTotal(total);\r\n        setStatistics(sourceResponse)\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      })\r\n      .then(function () {\r\n      });\r\n  }\r\n\r\n  const getBarangays = () => {\r\n    axios.get(`${baseUrl}/beneficiaries/barangays`,{params: searchOptions})\r\n    .then(function (response) {\r\n      setLoading(false);\r\n      let APIResponse = response.data.data;\r\n      APIResponse.map((item, index) => {\r\n        item.key = `barangay_${index}`;\r\n        return item;\r\n      })\r\n      setBarangays(APIResponse);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    })\r\n    .then(function () {\r\n    });\r\n  }\r\n\r\n  const dataSource = beneficiaries;\r\n  \r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      key: 'full_name_ln',\r\n      render: (text, record) => (\r\n        <span>\r\n          <Highlighter\r\n            highlightStyle={{ backgroundColor: '#ffe4bf', padding: 0 }}\r\n            searchWords={keywords}\r\n            autoEscape={true}\r\n            textToHighlight={`${record.lastname ? record.lastname : \"\"}, ${record.firstname ? record.firstname : \"\"} ${record.midname ? record.midname : \"\"} ${record.ext ? record.ext : \"\"}`}\r\n          />\r\n        </span>\r\n      ),\r\n    },\r\n    {\r\n      title: 'Birthday',\r\n      dataIndex: 'birthday',\r\n      key: 'birthday',\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n    },\r\n    {\r\n      title: 'Source',\r\n      dataIndex: 'source',\r\n      key: 'source',\r\n    },\r\n    {\r\n      title: 'Category',\r\n      dataIndex: 'category',\r\n      key: 'category',\r\n    },\r\n    {\r\n      title: 'Remarks',\r\n      dataIndex: 'remarks',\r\n      key: 'remarks',\r\n    },\r\n  ];\r\n\r\n\r\n\r\n  const populateBarangaySelection = () => {\r\n    let children = [];\r\n    barangays.map(item => {\r\n    children.push(<Option key={item.key} value={item.barangay_name}  label={item.barangay_name}>{item.barangay_name}, {item.city_name}</Option>);\r\n    });\r\n    return children;\r\n  }\r\n  const populateSourceSelection = () => {\r\n    let children = [];\r\n    sourceStatistics.map(item => {\r\n    children.push(<Option key={item.key} value={item.source}  label={item.source}>{item.source}</Option>);\r\n    });\r\n    return children;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n        <Form name=\"normal_login\" className=\"login-form\" layout=\"inline\" onFinish={getBeneficiaries} >\r\n            <Form.Item name=\"username\">\r\n                <Input autoComplete=\"off\" placeholder=\"Search\" allowClear onChange={(e) => {queryString(e)}} style={{width: \"250px\"}}  />\r\n            </Form.Item>\r\n            <Form.Item name=\"barangay\">\r\n                <Select\r\n                allowClear\r\n                mode=\"multiple\"\r\n                style={{ width: '300px' }}\r\n                placeholder=\"Barangay\"\r\n                onChange={selectBarangay}\r\n                optionLabelProp=\"label\"\r\n                >\r\n                { populateBarangaySelection() }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item name=\"source\">\r\n                <Select\r\n                allowClear\r\n                style={{ width: '120px' }}\r\n                placeholder=\"Source\"\r\n                onChange={selectSource}\r\n                >\r\n                { populateSourceSelection() }\r\n                </Select>\r\n            </Form.Item>\r\n            <Form.Item>\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                Search\r\n                </Button>\r\n            </Form.Item>\r\n            </Form> \r\n            { (keywords.length != 0 ? (\r\n            <Space>\r\n                <Text>keywords: </Text>\r\n                {keywords.map(item => {\r\n                return <Text>\"<Text strong>{item}</Text>\"</Text>\r\n                })}\r\n            </Space>\r\n            ) : \"\") }\r\n            <br />\r\n            <Table\r\n            dataSource={dataSource}\r\n            columns={columns}\r\n            loading={loading}\r\n            pagination={{ position: ['topLeft', 'bottomLeft'] }}\r\n            expandable={{\r\n                expandedRowRender: record => {\r\n                return (<div>\r\n                    <p style={{ margin: 0 }}>Source: <b>{record.source}</b></p>\r\n                    <p style={{ margin: 0 }}>Category: <b>{record.category} {record.remarks}</b></p>\r\n                    <p style={{ margin: 0 }}>Name: <b>{record.full_name_fn}</b></p>\r\n                    <p style={{ margin: 0 }}>Address: <b>{record.address}, {record.province_name}</b></p>\r\n                    <p style={{ margin: 0 }}>Payment Category: <b>{record.payment_category}</b></p>\r\n                    <p style={{ margin: 0 }}>Payout Branch: <b>{record.payout_branch}</b></p>\r\n                    <p style={{ margin: 0 }}>Payout Partner: <b>{record.payout_partner}</b></p>\r\n                    <p style={{ margin: 0 }}>\r\n                    Cash Out Reference Number:&nbsp;\r\n                    <b>\r\n                        <Highlighter\r\n                        highlightStyle={{ backgroundColor: '#ffe4bf', padding: 0 }}\r\n                        searchWords={keywords}\r\n                        autoEscape={true}\r\n                        textToHighlight={`${record.cash_out_ref_number ? record.cash_out_ref_number : \"\"}`}\r\n                        />\r\n                    </b>\r\n                    </p>\r\n                    <p style={{ margin: 0 }}>Payout Schedule: <b>{record.schedule}</b></p>\r\n                    <p style={{ margin: 0 }}>Batch and Part: <b>{record.batch_part}</b></p>\r\n                    <p style={{ margin: 0 }}>Starpay Disbursement Status: <b>{record.starpay_status}</b></p>\r\n                </div>);\r\n                },\r\n            }}\r\n            />\r\n            <Title level={3}>Total Records: {statisticsTotal}</Title>\r\n\r\n            <Tree\r\n                showLine\r\n                switcherIcon={<DownOutlined />}\r\n                defaultExpandAll={true}\r\n                onSelect={onSelect}\r\n                treeData={statistics}\r\n            />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchApp;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button, Checkbox } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 17 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 5, span: 17 },\r\n};\r\n\r\nconst LoginForm = props => {\r\n  const [submit, setSubmit] = useState(false);\r\n  const [formError, setFormError] = useState(false);\r\n  const onSubmit = values => {\r\n    setSubmit(true);\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const displayErrors = () => {\r\n    if(formError){\r\n      return {\r\n        validateStatus: 'error',\r\n        help: formError.message\r\n      }\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...layout}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onSubmit}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          {...displayErrors()}\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Password\"\r\n          name=\"password\"\r\n          rules={[{ required: true, message: 'Please input your password!' }]}\r\n        >\r\n          <Input.Password prefix={<LockOutlined />} />\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" disabled={submit} loading={submit}>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoginForm.propTypes = {\r\n  \r\n};\r\n\r\n\r\nexport default LoginForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Input, Button, Checkbox, Select } from 'antd';\r\nimport { LockOutlined, UserOutlined } from '@ant-design/icons';\r\nimport _cloneDeep from 'lodash/cloneDeep'\r\n\r\nconst { Option } = Select;\r\n\r\nconst layout = {\r\n  labelCol: { span: 6 },\r\n  wrapperCol: { span: 18 },\r\n};\r\nconst tailLayout = {\r\n  wrapperCol: { offset: 5, span: 17 },\r\n};\r\n\r\nconst RegistrationForm = (props) => {\r\n  const formRef = React.useRef();\r\n  const [submit, setSubmit] = useState(false);\r\n  const [userPosition, setUserPosition] = useState(\"\");\r\n  const [formError, setFormError] = useState({});\r\n  const [provinces, setProvinces] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [barangays, setBarangays] = useState([]);\r\n  const [province, setProvince] = useState(\"\");\r\n  const [city, setCity] = useState(\"\");\r\n  const [barangay, setBarangay] = useState(\"\");\r\n  const [formType, setFormType] = useState(\"create\");\r\n  const [userId, setUserId] = useState(null);\r\n  const [changePassword, setChangePassword] = useState(false);\r\n  useEffect(() => {\r\n    getProvinces();\r\n  }, []);\r\n  useEffect(() => {\r\n    if(props.userData != null){\r\n      setFormType(\"update\");\r\n      let userData = _cloneDeep(props.userData);\r\n      setUserId(userData.id);\r\n      setUserPosition(userData.position);\r\n      if(userData.barangay_id){\r\n        setCity(userData.barangay.city_psgc);\r\n        setProvince(userData.barangay.province_psgc);\r\n        userData.city = userData.barangay.city_psgc;\r\n        userData.province = userData.barangay.province_psgc;\r\n        setBarangay(userData.barangay_id);\r\n        setCities([{\r\n          city_name: userData.barangay.city_name,\r\n          city_psgc: userData.barangay.city_psgc,\r\n        }]);\r\n        setBarangays([{\r\n          barangay_name: userData.barangay.barangay_name,\r\n          id: userData.barangay.id,\r\n        }]);\r\n      }\r\n      formRef.current.setFieldsValue({\r\n        ...userData\r\n      });\r\n    }\r\n  }, [props.userData]);\r\n  const onSubmit = values => {\r\n    setSubmit(true);\r\n    if(formType == \"update\"){\r\n      values.id = userId;\r\n    }\r\n    console.log(values);\r\n    \r\n    // API.User.save(values, formType)\r\n    // .then(res => {\r\n    //   setSubmit(false);\r\n    //   setFormError({});\r\n    //   if(props.type == \"registration\"){\r\n    //     formRef.current.resetFields();\r\n    //   }\r\n    //   let message = \"\";\r\n    //   let title = \"Success\";\r\n    //   if(formType == \"create\"){\r\n    //     title = \"Registration success\";\r\n    //     message = \"Please contact administrator to activate your account.\";\r\n    //   }else if(props.type == \"user\"){\r\n    //     message = \"Account settings have been updated.\";\r\n    //   }else{\r\n    //     message = \"User has been updated. \";\r\n    //   }\r\n    //   Swal.fire({\r\n    //     title: title,\r\n    //     text: message,\r\n    //     icon: 'success',\r\n    //     confirmButtonText: 'OK',\r\n    //     onClose: () => {\r\n\r\n    //     }\r\n    //   })\r\n    //   setBarangay(\"\");\r\n    //   setProvince(\"\");\r\n    //   setCity(\"\");\r\n    // })\r\n    // .catch(err => {\r\n    //   setSubmit(false);\r\n    //   if(err.response.status == 422){\r\n    //     setFormError(err.response.data.errors);\r\n    //   }\r\n    // })\r\n    // .then(res => {\r\n    //   setSubmit(false);\r\n    // })\r\n  };\r\n\r\n  const onFinishFailed = errorInfo => {\r\n    console.log('Failed:', errorInfo);\r\n  };\r\n\r\n  const displayErrors = (field) => {\r\n    if(formError[field]){\r\n      return {\r\n        validateStatus: 'error',\r\n        help: formError[field][0]\r\n      }\r\n    }\r\n  }\r\n  const getProvinces = () => {\r\n    // API.Barangay.getProvinces()\r\n    // .then(res => {\r\n    //   setProvinces(res.data.provinces);\r\n    // })\r\n    // .catch(res => {\r\n    // })\r\n    // .then(res => {})\r\n    // ;;\r\n  }\r\n  const getCities = (e) => {\r\n    // setCities([]);\r\n    // if(typeof e == \"undefined\"){\r\n    //   setProvince(\"\");\r\n    // }else{\r\n    //   setProvince(e);\r\n    // }\r\n    // API.Barangay.getCities(e)\r\n    // .then(res => {\r\n    //   setCities(res.data.cities);\r\n    // })\r\n    // .catch(res => {\r\n    // })\r\n    // .then(res => {})\r\n    // ;;\r\n  }\r\n  const getBarangays = (city) => {\r\n    // setBarangays([]);\r\n    // if(typeof city == \"undefined\"){\r\n    //   setCity(\"\");\r\n    // }else{\r\n    //   setCity(city);\r\n    // }\r\n    // API.Barangay.getBarangays(province,city)\r\n    // .then(res => {\r\n    //   setBarangays(res.data.barangays);\r\n    // })\r\n    // .catch(res => {\r\n    // })\r\n    // .then(res => {})\r\n    // ;;\r\n  }\r\n\r\n  const populateProvinces = () => {\r\n    let items = [];\r\n    provinces.map(item => {\r\n      items.push(<Option value={item.province_psgc} key={item.province_psgc}>{item.province_name}</Option>);\r\n    })\r\n    return items;\r\n  }\r\n  const populateCities = () => {\r\n    let items = [];\r\n    cities.map(item => {\r\n      items.push(<Option value={item.city_psgc} key={item.city_psgc}>{item.city_name}</Option>);\r\n    })\r\n    return items;\r\n  }\r\n  const populateBarangays = () => {\r\n    let items = [];\r\n    barangays.map(item => {\r\n      items.push(<Option value={item.id} key={item.id}>{item.barangay_name}</Option>);\r\n    })\r\n    return items;\r\n  }\r\n\r\n  const formSetBarangay = (e) => {\r\n    if(typeof e == \"undefined\"){\r\n      setBarangay(\"\");\r\n    }else{\r\n      setBarangay(e);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        {...layout}\r\n        ref={formRef}\r\n        name=\"basic\"\r\n        initialValues={{ remember: true }}\r\n        onFinish={onSubmit}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          label=\"Username\"\r\n          name=\"username\"\r\n          {...displayErrors('username')}\r\n          rules={[{ required: true, message: 'Please input your username!' }]}\r\n        >\r\n          <Input prefix={<UserOutlined />} />\r\n        </Form.Item>\r\n\r\n        { props.type == \"user\" || props.type == \"update\" ? (\r\n          <Form.Item {...tailLayout} name=\"change_password\" valuePropName=\"checked\">\r\n            <Checkbox onChange={(e) => {setChangePassword(e.target.checked)}}>Change Password</Checkbox>\r\n          </Form.Item>\r\n        ) : \"\" }\r\n\r\n\r\n        { formType == \"create\" || changePassword ? (\r\n          <React.Fragment>\r\n            <Form.Item\r\n              label=\"Password\"\r\n              name=\"password\"\r\n              {...displayErrors('password')}\r\n              rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n\r\n            <Form.Item\r\n              label=\"Confirm Password\"\r\n              name=\"password_confirmation\"\r\n              {...displayErrors('password_confirmation')}\r\n              rules={[{ required: true, message: 'Please input your password!' }]}\r\n            >\r\n              <Input.Password prefix={<LockOutlined />} />\r\n            </Form.Item>\r\n          </React.Fragment>\r\n        ) : \"\" }\r\n\r\n        <Form.Item\r\n          label=\"First Name\"\r\n          name=\"first_name\"\r\n          {...displayErrors('first_name')}\r\n          rules={[{ required: true, message: 'Please input your first name.' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Middle Name\"\r\n          name=\"middle_name\"\r\n          {...displayErrors('middle_name')}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Last Name\"\r\n          name=\"last_name\"\r\n          {...displayErrors('last_name')}\r\n          rules={[{ required: true, message: 'Please input your last name.' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        <Form.Item\r\n          label=\"Department/Unit\"\r\n          name=\"department_unit\"\r\n          {...displayErrors('department_unit')}\r\n          rules={[{ required: true, message: 'Please input your department/unit.' }]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n\r\n        \r\n        <Form.Item {...tailLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\" disabled={submit} loading={submit}>\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nRegistrationForm.propTypes = {\r\n  \r\n};\r\n\r\n\r\nexport default RegistrationForm;","import React, { useState, useEffect } from 'react';\r\nimport { Typography   } from 'antd';\r\nimport logo from './logo.png';\r\nimport LoginForm from './LoginForm'\r\nimport RegistrationForm from './RegistrationForm'\r\nconst { Title, Text } = Typography;\r\n\r\n\r\nconst Layout = (props) => {\r\n\r\n  return (\r\n    <div className=\"Layout row h-100 p-10\">\r\n        <div className=\"col-6\">\r\n            <Title level={3} style={{textAlign:\"center\"}}>Login Form</Title>\r\n            <LoginForm />\r\n        </div>\r\n        <div className=\"col-6\">\r\n            <Title level={3} style={{textAlign:\"center\"}}>Registration Form</Title>\r\n            <RegistrationForm />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Typography   } from 'antd';\r\nimport logo from './logo.png';\r\nconst { Title, Text } = Typography;\r\n\r\n\r\nconst Layout = (props) => {\r\n\r\n  return (\r\n    <div className=\"Layout\">\r\n      <div className=\"main-layout-container\">\r\n        <div className=\"container\"> \r\n          <div className=\"row justify-content-center align-items-center p-3\">\r\n            <img className=\"h-16\" src={logo} alt=\"\" style={{width: \"100%\"}} />\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <Title level={2} style={{textAlign: \"center\"}}>Social Amelioration Information System</Title>\r\n              <br />\r\n              { props.children }\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport SearchApp from './SearchApp'\r\nimport Login from './Login'\r\nimport Layout from './Layout'\r\nimport './styles.css';\r\nimport 'antd/dist/antd.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n    <Link to=\"/\">Home</Link>\r\n    <Link to=\"/login\">Login</Link>\r\n      \r\n    </div>\r\n\r\n    <Switch>\r\n      <Route path=\"/login\">\r\n        <Layout><Login /></Layout>\r\n      </Route>\r\n      <Route path=\"/\">\r\n        <Layout><SearchApp /></Layout>\r\n      </Route>\r\n    </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}